[{"name":"app.R","content":"# Load necessary libraries\r\nlibrary(shiny)\r\nlibrary(ggplot2)\r\nlibrary(tidyverse)\r\n\r\n# Define the UI\r\nui <- fluidPage(\r\n  titlePanel(\"Net Allocations and Depth-Based Calculations\"),\r\n\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      numericInput(\"Sizeha\", \"Lake Size (ha):\", value = 45000, min = 1, step = 1),\r\n      numericInput(\"MaxDepth\", \"Maximum Depth:\", value = 38, min = 1, step = 1),\r\n      actionButton(\"update\", \"Update\")\r\n    ),\r\n\r\n    mainPanel(\r\n      plotOutput(\"allocationPlot\"),\r\n      tableOutput(\"filteredTable\")\r\n    )\r\n  )\r\n)\r\n\r\n# Define the server logic\r\nserver <- function(input, output) {\r\n\r\n  # Reactive values for inputs\r\n  data <- reactive({\r\n    Sizeha <- input$Sizeha\r\n    MaxDepth <- input$MaxDepth\r\n\r\n    # largemesh polynomial\r\n    x <- 0:50000\r\n    y <- -0.00000003 * x^2 + 0.003 * x + 22.989\r\n    modlm <- lm(y ~ poly(x, 2))\r\n\r\n    # smallmesh polynomial\r\n    x2 <- 1:50000\r\n    y2 <- -0.00000001 * x2^2 + 0.0014 * x2 + 16.774\r\n    modsm <- lm(y2 ~ poly(x2, 2))\r\n\r\n    # Predict number of nets\r\n    SMallocation <- ifelse(Sizeha >= 50000, 50, predict(modsm, data.frame(x2 = Sizeha)))\r\n    LMallocation <- ifelse(Sizeha >= 50000, 100, predict(modlm, data.frame(x = Sizeha)))\r\n\r\n    # Create individual data frames\r\n    s3.6 <- data.frame(depth = c(6, 6), value = c(0.51, 0.49), strata = \"3-6\", Scaling = 0.5)\r\n    s6.12 <- data.frame(depth = c(12, 12, 12), value = c(0.37, 0.29, 0.34), strata = \"6-12\", Scaling = 0.61)\r\n    s12.20 <- data.frame(depth = c(20, 20, 20, 20), value = c(0.34, 0.25, 0.30, 0.11), strata = \"12-20\", Scaling = 0.63)\r\n    s20.35 <- data.frame(depth = c(35, 35, 35, 35, 35), value = c(0.28, 0.23, 0.26, 0.13, 0.10), strata = \"20-35\", Scaling = 0.68)\r\n    s35.50 <- data.frame(depth = c(50, 50, 50, 50, 50, 50), value = c(0.25, 0.19, 0.23, 0.14, 0.11, 0.09), strata = \"35-50\", Scaling = 0.78)\r\n    s50.75 <- data.frame(depth = c(75, 75, 75, 75, 75, 75, 75), value = c(0.22, 0.17, 0.20, 0.14, 0.12, 0.10, 0.06), strata = \"50-75\", Scaling = 0.88)\r\n    s200 <- data.frame(depth = c(999, 999, 999, 999, 999, 999, 999, 999), value = c(0.19, 0.14, 0.18, 0.14, 0.12, 0.11, 0.07, 0.05), strata = \"75+\", Scaling = 1)\r\n\r\n    # Combine into a single data frame\r\n    logicdf <- rbind(s3.6, s6.12, s12.20, s20.35, s35.50, s50.75, s200)\r\n\r\n    # Filter data based on maximum depth\r\n    logicdffilter <- logicdf %>% dplyr::filter(depth > MaxDepth)\r\n    depth_needed <- first(unique(logicdffilter$depth))\r\n\r\n    # Filter and calculate sets\r\n    filtered_data <- logicdf %>%\r\n      filter(depth == depth_needed) %>%\r\n      mutate(Sets_N_NA = value * LMallocation * Scaling,\r\n             Sets_N_ON = value * SMallocation * Scaling)\r\n\r\n    list(\r\n      x = x, y = y, x2 = x2, y2 = y2,\r\n      Sizeha = Sizeha, SMallocation = SMallocation, LMallocation = LMallocation,\r\n      filtered_data = filtered_data\r\n    )\r\n  })\r\n\r\n  # Render plot\r\n  output$allocationPlot <- renderPlot({\r\n    d <- data()\r\n    plot(d$x, d$y, type = \"l\", col = \"blue\", lwd = 2,\r\n         xlab = \"Surface area (ha)\", ylab = \"Nets (n)\",\r\n         main = \"Net Allocations Cycle 4 - lake size\")\r\n    lines(d$x2, d$y2, col = \"red\")\r\n    points(d$Sizeha, d$SMallocation, col = \"red\", pch = 19, cex = 1.5)\r\n    points(d$Sizeha, d$LMallocation, col = \"blue\", pch = 19, cex = 1.5)\r\n    legend(\"topleft\", legend = c(\"NA large mesh\", \"ON small mesh\"),\r\n           col = c(\"blue\", \"red\"), lty = c(1, 1), lwd = 2)\r\n  })\r\n\r\n  # Render filtered table\r\n  output$filteredTable <- renderTable({\r\n    data()$filtered_data\r\n  })\r\n}\r\n\r\n# Run the app\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"},{"name":"Cycle4Allocation.Rproj","content":"Version: 1.0\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: XeLaTeX\r\n","type":"text"},{"name":"README.md","content":"# Cycle4Allocation\r\nShinylive app for cycle 4 allocations \r\n","type":"text"}]
